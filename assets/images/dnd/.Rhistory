##trying to align just 2
twoplots <- (spells_by_species$plot[[1]] / spells_by_species$plot[[2]]) | (spells_by_species$plot[[3]] / spells_by_species$plot[[4]])
twoplots
##trying to align just 2
twoplots <- ((spells_by_species$plot[[1]] / spells_by_species$plot[[2]]) | (spells_by_species$plot[[3]] / spells_by_species$plot[[4]])) /
((spells_by_species$plot[[5]] / spells_by_species$plot[[6]]) | (spells_by_species$plot[[7]] / spells_by_species$plot[[8]]))
twoplots
rm(spells_by_species)
#nested version
spells_by_species <- spells_long |>
group_by(species) |>
select(-binary) |>
nest()
spells_by_species <- spells_by_species |>
mutate(data = map(data, ~ .x |>
arrange(name) |>                              # Arrange by name
mutate(level = factor(level)) |>              # Convert level to a factor
group_by(level) |>                            # Group by level
mutate(id = row_number()) |>                  # Create a new id column
pivot_longer(cols = 13:15,                    # Pivot specified columns
names_to = "component",
values_to = "binary2") |>
filter(binary2 == TRUE))) |>                  # Filter rows where binary2 is TRUE
mutate(plot = map2(data, species,
~ggplot(.x, aes(id, level, tooltip = name, data_id = name))+
geom_point_interactive(aes(color=school,fill=school, shape=component), size=5)+
scale_shape_manual(values = c(4,3,19))+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_text(color="grey"),
axis.ticks.y=element_blank(),
plot.background = element_rect(fill = "#f4f4f4", color = NA),
panel.background = element_rect(fill = "#f4f4f4", color = NA),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position="none")+
labs(x=NULL, y="Level")+
scale_fill_manual_interactive(values=school_colors1)+
scale_color_manual_interactive(values=school_colors1)+
ggtitle(.y)))
spells_by_species$plot[odd_indices] <- lapply(odd_indices, function(i) {
spells_by_species$plot[[i]] +
coord_radial(start = -0.5 * pi, end = 0.5 * pi, direction = 1,
inner.radius = 0.4, r.axis.inside = TRUE)})
#editing the individual graphs
odd_indices <- c(1,3,5,7)
spells_by_species$plot[odd_indices] <- lapply(odd_indices, function(i) {
spells_by_species$plot[[i]] +
coord_radial(start = -0.5 * pi, end = 0.5 * pi, direction = 1,
inner.radius = 0.4, r.axis.inside = TRUE)})
even_indices <- c(2, 4, 8, 6)
spells_by_species$plot[even_indices] <- lapply(even_indices, function(i) {
spells_by_species$plot[[i]] +
coord_radial(start = 0.5 * pi, end = -0.5 * pi, direction = -1,
inner.radius = 0.4, r.axis.inside = TRUE)})
##trying to align just 2
twoplots <- ((spells_by_species$plot[[1]] / spells_by_species$plot[[2]]) | (spells_by_species$plot[[3]] / spells_by_species$plot[[4]])) /
((spells_by_species$plot[[5]] / spells_by_species$plot[[6]]) | (spells_by_species$plot[[7]] / spells_by_species$plot[[8]]))
twoplots
##trying to align just 2
twoplots <- (spells_by_species$plot[[1]] + spells_by_species$plot[[3]]) /
plot_spacer() + (spells_by_species$plot[[2]] + spells_by_species$plot[[4]])
twoplots
##trying to align just 2
twoplots <- (spells_by_species$plot[[1]] + spells_by_species$plot[[3]]) /
(spells_by_species$plot[[2]] + spells_by_species$plot[[4]])
twoplots
##trying to align just 2
twoplots <- (spells_by_species$plot[[1]] + spells_by_species$plot[[3]]) /
plot_spacer() + (spells_by_species$plot[[2]] + spells_by_species$plot[[4]]) +
plot_layout(widths=c(4,-1,4))
twoplots
##trying to align just 2
twoplots <- (spells_by_species$plot[[1]] + spells_by_species$plot[[3]]) /
plot_spacer() + (spells_by_species$plot[[2]] + spells_by_species$plot[[4]]) +
plot_layout(widths=c(4,-4,4))
twoplots
##trying to align just 2
twoplots <- (spells_by_species$plot[[1]] + spells_by_species$plot[[3]]) /
(spells_by_species$plot[[2]] + spells_by_species$plot[[4]])
twoplots
spells <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-12-17/spells.csv')
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(stringr)
library(purrr)
library(ggiraph)
library(glue)
library(patchwork)
school_colors1 <- c("#4169E1", "#F1C40F", "#BDC3C7",
"#E573B7", "#C70039", "#9B59B6",
"#32DF51", "#FF5733")
#nested version
spells_by_species <- spells_long |>
group_by(species) |>
select(-binary) |>
nest()
spells_long <- spells |>
pivot_longer(cols=4:11, names_to="species", values_to="binary") |>
filter(binary==TRUE)
#nested version
spells_by_species <- spells_long |>
group_by(species) |>
select(-binary) |>
nest()
spells_by_species <- spells_by_species |>
mutate(data = map(data, ~ .x |>
arrange(name) |>                              # Arrange by name
mutate(level = factor(level)) |>              # Convert level to a factor
group_by(level) |>                            # Group by level
mutate(id = row_number()) |>                  # Create a new id column
pivot_longer(cols = 13:15,                    # Pivot specified columns
names_to = "component",
values_to = "binary2") |>
filter(binary2 == TRUE))) |>                  # Filter rows where binary2 is TRUE
mutate(plot = map2(data, species,
~ggplot(.x, aes(id, level, tooltip = name, data_id = name))+
geom_point_interactive(aes(color=school,fill=school, shape=component), size=5)+
scale_shape_manual(values = c(4,3,19))+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_text(color="grey"),
axis.ticks.y=element_blank(),
plot.background = element_rect(fill = "#f4f4f4", color = NA),
panel.background = element_rect(fill = "#f4f4f4", color = NA),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position="none")+
labs(x=NULL, y="Level")+
scale_fill_manual_interactive(values=school_colors1)+
scale_color_manual_interactive(values=school_colors1)+
ggtitle(.y)))
#setting the aesthetics of the hover and hover text
hover_css <- "cursor:pointer;
filter: brightness(1.3) drop-shadow(0px 0px 2px rgba(47, 35, 41, 0.2));"
tooltip_css <- "background-color:#d8118c;
color:white;
padding:5px;
border-radius:3px;"
#editing the individual graphs
odd_indices <- c(1,3,5,7)
spells_by_species$plot[odd_indices] <- lapply(odd_indices, function(i) {
spells_by_species$plot[[i]] +
coord_radial(start = -0.5 * pi, end = 0.5 * pi, direction = 1,
inner.radius = 0.4, r.axis.inside = TRUE)})
even_indices <- c(2, 4, 8, 6)
spells_by_species$plot[even_indices] <- lapply(even_indices, function(i) {
spells_by_species$plot[[i]] +
coord_radial(start = 0.5 * pi, end = -0.5 * pi, direction = -1,
inner.radius = 0.4, r.axis.inside = TRUE)})
combined_plots <- (spells_by_species$plot[[1]] + spells_by_species$plot[[2]]) /
(spells_by_species$plot[[3]] + spells_by_species$plot[[8]]) /
(spells_by_species$plot[[7]]+spells_by_species$plot[[6]]) /
(spells_by_species$plot[[5]]+spells_by_species$plot[[4]])+
plot_layout(guides="collect")
interactive_plot <- girafe(ggobj = combined_plots, width_svg = 18, height_svg = 24)
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
combined_plots <- (spells_by_species$plot[[1]] + spells_by_species$plot[[2]]) /
(spells_by_species$plot[[3]] + spells_by_species$plot[[8]]) /
(spells_by_species$plot[[7]]+spells_by_species$plot[[6]]) /
(spells_by_species$plot[[5]]+spells_by_species$plot[[4]])+
plot_layout(guides="collect") & theme(plot.margin = margin())
interactive_plot <- girafe(ggobj = combined_plots, width_svg = 18, height_svg = 24)
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
combined_plots <- (spells_by_species$plot[[1]] + spells_by_species$plot[[2]]) /
(spells_by_species$plot[[3]] + spells_by_species$plot[[8]]) /
(spells_by_species$plot[[7]]+spells_by_species$plot[[6]]) /
(spells_by_species$plot[[5]]+spells_by_species$plot[[4]])+
plot_layout(guides="collect") & theme(plot.margin = margin(t=0, r=0,
b=0, l=0))
interactive_plot <- girafe(ggobj = combined_plots, width_svg = 18, height_svg = 24)
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
##trying to align just 2
twoplots <- (spells_by_species$plot[[1]] + spells_by_species$plot[[3]]) /
(spells_by_species$plot[[2]] + spells_by_species$plot[[4]])
twoplots
interactive_plot
combined_plots <- ((spells_by_species$plot[[1]] / spells_by_species$plot[[2]]) +
(spells_by_species$plot[[3]] / spells_by_species$plot[[8]])) /
((spells_by_species$plot[[7]] / spells_by_species$plot[[6]]) +
(spells_by_species$plot[[5]] / spells_by_species$plot[[4]])) +
plot_layout(guides="collect") & theme(plot.margin = margin(t=0, r=0,
b=0, l=0))
interactive_plot <- girafe(ggobj = combined_plots, width_svg = 18, height_svg = 24)
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
combined_plots <- ((spells_by_species$plot[[1]] / spells_by_species$plot[[2]]) |
(spells_by_species$plot[[3]] / spells_by_species$plot[[8]])) /
((spells_by_species$plot[[7]] / spells_by_species$plot[[6]]) |
(spells_by_species$plot[[5]] / spells_by_species$plot[[4]])) +
plot_layout(guides="collect") & theme(plot.margin = margin(t=0, r=0,
b=0, l=0))
interactive_plot <- girafe(ggobj = combined_plots, width_svg = 18, height_svg = 24)
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
combined_plots <- ((spells_by_species$plot[[1]] / spells_by_species$plot[[2]]) |
(spells_by_species$plot[[3]] / spells_by_species$plot[[8]])) /
((spells_by_species$plot[[7]] / spells_by_species$plot[[6]]) |
(spells_by_species$plot[[5]] / spells_by_species$plot[[4]])) +
plot_layout(guides="collect")
interactive_plot <- girafe(ggobj = combined_plots, width_svg = 18, height_svg = 24)
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
combined_plots <- ((spells_by_species$plot[[1]] / spells_by_species$plot[[2]]) |
(spells_by_species$plot[[3]] / spells_by_species$plot[[8]])) +
((spells_by_species$plot[[7]] / spells_by_species$plot[[6]]) |
(spells_by_species$plot[[5]] / spells_by_species$plot[[4]])) +
plot_layout(guides="collect")
interactive_plot <- girafe(ggobj = combined_plots, width_svg = 18, height_svg = 24)
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
combined_plots <- ((spells_by_species$plot[[1]] / spells_by_species$plot[[2]]) |
(spells_by_species$plot[[3]] / spells_by_species$plot[[8]])) +
((spells_by_species$plot[[7]] / spells_by_species$plot[[6]]) |
(spells_by_species$plot[[5]] / spells_by_species$plot[[4]])) +
plot_layout(nrow=2, guides="collect")
interactive_plot <- girafe(ggobj = combined_plots, width_svg = 18, height_svg = 24)
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
combined_plots <- ((spells_by_species$plot[[1]] / spells_by_species$plot[[2]]) |
(spells_by_species$plot[[3]] / spells_by_species$plot[[8]])) /
((spells_by_species$plot[[7]] / spells_by_species$plot[[6]]) |
(spells_by_species$plot[[5]] / spells_by_species$plot[[4]])) +
plot_layout(guides="collect")
interactive_plot <- girafe(ggobj = combined_plots, width_svg = 18, height_svg = 24)
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
combined_plots <- ((spells_by_species$plot[[1]] / spells_by_species$plot[[2]]) |
(spells_by_species$plot[[3]] / spells_by_species$plot[[8]])) /
((spells_by_species$plot[[7]] / spells_by_species$plot[[6]]) |
(spells_by_species$plot[[5]] / spells_by_species$plot[[4]])) +
plot_layout()
interactive_plot <- girafe(ggobj = combined_plots, width_svg = 18, height_svg = 24)
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
combined_plots <- ((spells_by_species$plot[[1]] / spells_by_species$plot[[2]]) |
(spells_by_species$plot[[3]] / spells_by_species$plot[[8]])) /
((spells_by_species$plot[[7]] / spells_by_species$plot[[6]]) |
(spells_by_species$plot[[5]] / spells_by_species$plot[[4]])) +
plot_layout(heights = c(1, 1), widths = c(1, 1)) &
theme(plot.margin = margin(0, 0, 0, 0))
interactive_plot <- girafe(ggobj = combined_plots, width_svg = 18, height_svg = 24)
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
#trying using wrap_plots
combined <- wrap_plots(spells_by_species$plot,
ncol=2, nrow=4)
combined
#trying using wrap_plots
combined <- wrap_plots(spells_by_species$plot[[1]], spells_by_species$plot[[3]],
spells_by_species$plot[[2]], spells_by_species$plot[[8]],
spells_by_species$plot[[7]], spells_by_species$plot[[6]],
spells_by_species$plot[[5]], spells_by_species$plot[[4]],
ncol=2, nrow=4)
combined
#trying using wrap_plots
combined <- wrap_plots(spells_by_species$plot[[1]], spells_by_species$plot[[3]],
spells_by_species$plot[[2]], spells_by_species$plot[[8]],
spells_by_species$plot[[7]], spells_by_species$plot[[5]],
spells_by_species$plot[[6]], spells_by_species$plot[[4]],
ncol=2, nrow=4)
combined
interactive_plot2 <- girafe(ggobj = combined, width_svg = 18, height_svg = 24)
interactive_plot2 <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot2
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 60,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 60,
offy = 60, use_cursor_pos = FALSE,
use_fill = TRUE,
placement = "doc"),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
interactive_plot <- girafe_options(interactive_plot,
opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 200,
offy = 200, use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.05"))
interactive_plot
htmltools::save_html(interactive_plot, "ggiraph-2.html")
htmltools::save_html(interactive_plot, "ggiraph-2.html")
htmltools::save_html(interactive_plot, "spells.html")
setwd("~/Documents/GitHub/portfolio/dataviz-blog/assets/images/dnd")
source("~/Documents/GitHub/Tidy Tuesday/17-12-24/spells_v3.R", echo=TRUE)
widei <- girafe(ggobj = wide_combined, fonts = list(sans = font),
width_svg = 12, height_svg = 9)
widei <- girafe_options(widei,
opts_hover(css = hover_css2),
opts_tooltip(css = tooltip_css,
offx = 340,
offy = 340,
use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.2"))
widei
htmlwidgets::saveWidget(widei, "spells_wide.html",
selfcontained = FALSE)
widei <- girafe(ggobj = wide_combined, fonts = list(sans = font),
width_svg = 24, height_svg = 18)
#setting the aesthetics of the hover and hover text
hover_css2 <- "cursor:pointer;
filter: brightness(1.2) drop-shadow(0px 0px 2px rgba(47, 35, 41, 0.2));
stroke-width:4;
r:4px;
transition: all 0.3s ease;"
tooltip_css <- "color:white;
padding:5px;
border-radius:3px;
font-size:14px;
font-family: 'Goudy Bookletter 1911', serif;
width:220px;"
widei <- girafe_options(widei,
opts_hover(css = hover_css2),
opts_tooltip(css = tooltip_css,
offx = 340,
offy = 340,
use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.2"))
widei
htmlwidgets::saveWidget(widei, "spells_wide.html",
selfcontained = FALSE)
install.packages("webshot")
library(webshot)
webshot::install_phantomjs()
source("~/Documents/GitHub/Tidy Tuesday/17-12-24/spells_v4.R", echo=TRUE)
View(spells_by_species)
View(spells_by_species[[2]][[1]])
source("~/Documents/GitHub/Tidy Tuesday/17-12-24/spells_v2.R", echo=TRUE)
i_plot <- girafe(ggobj = p2, width_svg = 10, height_svg = 10)
i_plot <- girafe_options(i_plot, opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350, offy = 60,
use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.2"))
i_plot
font_add_google("Goudy Bookletter 1911", "goudy_bookletter")
showtext_auto(enable = TRUE)
font <- "goudy_bookletter"
source("~/Documents/GitHub/Tidy Tuesday/17-12-24/spells_v2.R", echo=TRUE)
p2 <- ggplot(sbs_unnested, aes(id, as.factor(level_2), tooltip = name, data_id = name))+
geom_point_interactive(aes(color=school, fill=school), size=3)+
theme_void()+
scale_y_discrete(limits=rev)+
scale_fill_manual_interactive(values=school_colors1)+
scale_color_manual_interactive(values=school_colors1)+
geom_segment(data=base_data1, aes(x = start, y = -1, xend = end, yend = -1),
colour = "grey", alpha=0.8, linewidth=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data1, aes(x = title_position, y = -4, label=toupper(species)), hjust=c(1,1,0,0,1,1,0,0),
colour = "grey", alpha=0.8, linewidth=4, font=font, inherit.aes = FALSE)+
coord_radial(start=0*pi, end=2.11*pi, inner.radius=0.1,
r.axis.inside = TRUE)+
theme(axis.text.y=element_text(family=font, size=14),
legend.text = element_text(family = font, size = 24),
legend.title = element_text(family = font, size = 26),
legend.background = element_blank(),
legend.box.background = element_blank(),
legend.position = "top",
legend.box="horizontal",
legend.direction = "horizontal",
plot.margin = margin(0,0,0,0))
p2 <- ggplot(sbs_unnested, aes(id, as.factor(level_2), tooltip = name, data_id = name))+
geom_point_interactive(aes(color=school, fill=school), size=3)+
theme_void()+
scale_y_discrete(limits=rev)+
scale_fill_manual_interactive(values=school_colors1)+
scale_color_manual_interactive(values=school_colors1)+
geom_segment(data=base_data1, aes(x = start, y = -1, xend = end, yend = -1),
colour = "grey", alpha=0.8, linewidth=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data1, aes(x = title_position, y = -4, label=toupper(species)), hjust=c(1,1,0,0,1,1,0,0),
colour = "grey", alpha=0.8, linewidth=4, family=font, inherit.aes = FALSE)+
coord_radial(start=0*pi, end=2.11*pi, inner.radius=0.1,
r.axis.inside = TRUE)+
theme(axis.text.y=element_text(family=font, size=14),
legend.text = element_text(family = font, size = 24),
legend.title = element_text(family = font, size = 26),
legend.background = element_blank(),
legend.box.background = element_blank(),
legend.position = "top",
legend.box="horizontal",
legend.direction = "horizontal",
plot.margin = margin(0,0,0,0))
p2
i_plot <- girafe(ggobj = p2, width_svg = 10, height_svg = 10)
i_plot <- girafe_options(i_plot, opts_hover(css = hover_css),
opts_tooltip(css = tooltip_css,
offx = 350, offy = 60,
use_cursor_pos = FALSE,
use_fill = TRUE),
opts_hover_inv(css = "opacity:0.2"))
gdtools::register_gfont("Goudy Bookletter 1911", "goudy_bookletter")
i_plot <- girafe(ggobj = p2, width_svg = 10, height_svg = 10)
i_plot <- girafe(ggobj = p2, fonts = list(sans = font), width_svg = 10, height_svg = 10)
library(systemfonts)
system_fonts()
font_info <- system_fonts()
if ("Goudy Bookletter" %in% font_info$family) {
# Register the font with a custom alias
register_font(name = "goudy_bookletter", family = "Goudy Bookletter")
} else {
message("Font 'Goudy Bookletter' is not installed on your system.")
}
font_info <- system_fonts()
if ("Goudy Bookletter" %in% font_info$family) {
# Register the font with a custom alias
register_font(name = "goudy_bookletter", family = "Goudy Bookletter 1911")
} else {
message("Font 'Goudy Bookletter' is not installed on your system.")
}
font_add_google("Goudy Bookletter 1911", "goudy_bookletter")
library(systemfonts)
# Register the font if it's installed locally
register_font(name = "goudy_bookletter", family = "Goudy Bookletter 1911")
register_font(name = "goudy_bookletter", family = "Goudy Bookletter 1911")
library(gdtools)
# Register the Google font
register_gfont("Goudy Bookletter 1911")
source("~/Documents/GitHub/Tidy Tuesday/17-12-24/spells_v2.R", echo=TRUE)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
showtext_auto(enable = TRUE)
